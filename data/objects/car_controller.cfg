{
	id: "car_controller",
	hidden_in_game: true,
	is_human: true,
	is_strict: true,

	properties: {
		_obstacles: { type: "obj obstacles|null" },
		obstacles: "obj obstacles<- _obstacles",

		cars: { type: "[obj car]", default: [] },
		flags: { type: "[obj flag]", default: [] },

		winner: { type: "null|obj car" },
		
		current_message: {type:"null|obj label"},
		
		show_message: "def(string message) ->commands
		[
		remove_object(current_message),
		spawn('label', {zorder: 50, _text: [message], mid_x: 400, mid_y: 300 }, [set(current_message,child)])
		]",

		restart: "def()->commands
			map(level.chars, remove_object(value));
			spawn_player('car_controller', 0, 0, 1)
		",
	},

	on_process: "
	[
	if(flags,
		if(winner = null and candidate != null and find(flags, value.owner != candidate) = null,
		[
			set(winner, candidate),
			show_message(candidate.name + ' wins!'),
			schedule(120, ; restart())
		])

		where candidate = flags[0].owner
	)
	]
	",

	on_create: "[
		spawn('obstacles', { x: 0, y: 0 }, [set(me._obstacles, child)] );
		[
		spawn('car', { mid_x: 750, mid_y: 50, player: 0, obstacles: obstacles, controller: me }, [add(cars, [child])] ),
		spawn('car', { mid_x: 50, mid_y: 50, player: 1, obstacles: obstacles, controller: me }, [add(cars, [child])] ),
		],

		map([[630,430], [130,430], [380,100]], spawn('flag', { x: value[0], y: value[1] }, [add(flags, [child])])),
                
                show_message('Ready...'),
                schedule(90, ; show_message('Set!')),
                schedule(180, ; show_message('Go!!')),
                schedule(270, ; show_message('')),


	]",
}
